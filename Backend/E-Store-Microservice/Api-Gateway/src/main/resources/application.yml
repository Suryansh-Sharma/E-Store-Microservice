eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
    registerWithEureka: true
    fetchRegistry: true
    healthcheck:
      enabled: true


#logging:
#  level:
#    org:
#      springframework:
#        cloud:
#          gateway: TRACE
#          gateway.route.RouteDefinitionLocator: INFO
#    root: INFO
spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      httpclient:
        ssl:
          use-insecure-trust-manager: true
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: 'http://localhost:3000'
            allowedHeaders:
              - Content-Type
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
      routes:
        - id : PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/products/** , /api/image/** , /api/brand/** , /swagger-ui/index.html#/
          filters:
            - name: CircuitBreaker
              args:
                # noinspection SpringBootApplicationYaml
                name: PRODUCT-SERVICE
                # noinspection SpringBootApplicationYaml
                fallbackuri: forward:/productServiceFallBack

        - id : INVENTORY-SERVICE
          uri: lb://INVENTORY-SERVICE
          predicates:
            - Path=/api/inventory/**
          filters:
            - name: CircuitBreaker
              args:
                # noinspection SpringBootApplicationYaml
                name: INVENTORY-SERVICE
                # noinspection SpringBootApplicationYaml
                fallbackuri: forward:/inventoryServiceFallBack

        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/order/**
          filters:
            - name: CircuitBreaker
              args:
                # noinspection SpringBootApplicationYaml
                name: ORDER-SERVICE
                # noinspection SpringBootApplicationYaml
                fallbackuri: forward:/orderServiceFallBack
        - id: USER-SERVICE
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/user/** , /api/cart/**
          filters:
            - name: CircuitBreaker
              args:
                # noinspection SpringBootApplicationYaml
                name: USER-SERVICE
                # noinspection SpringBootApplicationYaml
                fallbackuri: forward:/userServiceFallBack
        - id: REVIEW-SERVICE
          uri: lb://REVIEW-SERVICE
          predicates:
            - Path=/api/review/** , /api/question-ans/** ,/api/rating/**
          filters:
            - name: CircuitBreaker
              args:
                # noinspection SpringBootApplicationYaml
                name: REVIEW-SERVICE
                # noinspection SpringBootApplicationYaml
                fallbackuri: forward:/reviewServiceFallBack
resilience4j:
  ratelimiter:
    configs:
      default:
        limitForPeriod: 5
        limitRefreshPeriod: 2s
        timeoutDuration: 5