eureka:
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
logging:
  level:
    org:
      springframework:
        cloud:
          gateway: TRACE
          gateway.route.RouteDefinitionLocator: INFO
    root: INFO
spring:
  application:
    name: API-GATEWAY
  cloud:
    gateway:
      routes:
        - id : PRODUCT-SERVICE
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/api/products/** , /api/image/** , /api/brand/**
          filters:
            - name: CircuitBreaker
              args:
                # noinspection SpringBootApplicationYaml
                name: PRODUCT-SERVICE
                # noinspection SpringBootApplicationYaml
                fallbackuri: forward:/productServiceFallBack
        - id : INVENTORY-SERVICE
          uri: lb://INVENTORY-SERVICE
          predicates:
            - Path=/api/inventory/**
          filters:
            - name: CircuitBreaker
              args:
                # noinspection SpringBootApplicationYaml
                name: INVENTORY-SERVICE
                # noinspection SpringBootApplicationYaml
                fallbackuri: forward:/inventoryServiceFallBack
        - id: ORDER-SERVICE
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/api/order/**
          filters:
            - name: CircuitBreaker
              args:
                # noinspection SpringBootApplicationYaml
                name: ORDER-SERVICE
                # noinspection SpringBootApplicationYaml
                fallbackuri: forward:/orderServiceFallBack
        - id: USER-SERVICE
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/user/** , /api/cart/**
          filters:
            - name: CircuitBreaker
              args:
                # noinspection SpringBootApplicationYaml
                name: USER-SERVICE
                # noinspection SpringBootApplicationYaml
                fallbackuri: forward:/userServiceFallBack
resilience4j:
  ratelimiter:
    configs:
      default:
        limitForPeriod: 5
        limitRefreshPeriod: 1s
        timeoutDuration: 0

server:
  port: 8080
  spring:
    cloud:
      gateway:
        discovery:
          locator:
            enabled: true
            lowerCaseServiceId: true